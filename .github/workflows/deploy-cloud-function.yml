name: Deploy Cloud Function

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, edited, synchronize]

env:
  FUNCTION_NAME: pull-cue-playout
  PROJECT_ID: fmg-regio-data-as
  REGION: europe-west3
  SUBSCRIPTION_NAME: cue-playout-subscription
  TABLE_ID: fmg-regio-data-as.dev_psh_source.dev_src_spark_articles_playout
  DLQ_TABLE_ID: fmg-regio-data-as.dev_psh_source.dev_src_spark_articles_playout_deadletter
  # SERVICE_ACCOUNT: cloud-run-function-deployer@fmg-regio-data-as.iam.gserviceaccount.com
  # SERVICE_ACCOUNT_FOR_GITHUB_ACTIONS: cloud-run-function-deployer@fmg-regio-data-as.iam.gserviceaccount.com
  # WORKLOAD_IDENTITY_PROVIDER_GITHUB_ACTIONS: projects/<project_number>/locations/global/workloadIdentityPools/github/providers/github-provider

jobs:
  deploy:
    if: github.event_name == 'pull_request'|| github.event_name == 'push'
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ secrets.PROJECT_NR }}/locations/global/workloadIdentityPools/${{ secrets.WI_DEPLOYER }}/providers/${{ secrets.WI_PROVIDER }}'
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Set upload config
        id: set-conf
        run: |
          if [[ "${{ github.event_name }}" = "pull_request" ]]; then
            echo "CLOUD_FUNCTIONS_NAME=${{ env.FUNCTION_NAME }}-dev" >> $GITHUB_OUTPUT
          else
            echo "CLOUD_FUNCTIONS_NAME=${{ env.FUNCTION_NAME }}-prod" >> $GITHUB_OUTPUT
          fi

      - name: Deploy Cloud Function
        run: |
          gcloud functions deploy "${{ steps.set-conf.outputs.CLOUD_FUNCTIONS_NAME }}" \
              --project ${{ env.PROJECT_ID }} \
              --runtime python312 \
              --region ${{ env.REGION }} \
              --source . \
              --trigger-http \
              --entry-point pull_and_process_messages \
              --set-env-vars "GCP_PROJECT='${{ env.PROJECT_ID }}',SUBSCRIPTION_NAME='${{ env.SUBSCRIPTION_NAME }}',TABLE_ID='${{ env.TABLE_ID }}',DLQ_TABLE_ID='${{ env.DLQ_TABLE_ID }}'" \
              --timeout=60s \
              --memory=512MB \
              --allow-unauthenticated \
              --no-gen2

      - name: Clean up credentials file
        run: |
          rm -f gha-creds-*.json 
